/*region Shadows*/
$ui-shadow-message: 0px 0px 1px rgba(0, 0, 0, 0.12), 0px 0px 1px rgba(0, 0, 0, 0.12);
$ui-shadow-card-rest: 0px 2px 4px rgba(0, 0, 0, 0.04);
$ui-shadow-panel: 0px 1.2px 3.6px rgba(0, 0, 0, 0.03), 0px 6.4px 14.4px rgba(0, 0, 0, 0.07);
$ui-shadow-flyout: 0px 8px 16px rgba(0, 0, 0, 0.14), inset 0px 0px 0px 1px rgba(32, 31, 30, 0.12);
$ui-shadow-dialog: 0px 32px 64px rgba(0, 0, 0, 0.1876), 0px 2px 21px rgba(0, 0, 0, 0.1474), inset 0px 0px 0px 1px rgba(32, 31, 30, 0.12);

$ui-shadow-dark-message: 0px 0px 1px rgba(0, 0, 0, 0.24), 0px 0px 1px rgba(0, 0, 0, 0.24);
$ui-shadow-dark-card-rest: 0px 2px 4px rgba(0, 0, 0, 0.13);
$ui-shadow-dark-panel: 0px 1.2px 3.6px rgba(0, 0, 0, 0.06), 0px 6.4px 14.4px rgba(0, 0, 0, 0.14);
$ui-shadow-dark-flyout: 0px 8px 16px rgba(0, 0, 0, 0.26), inset 0px 0px 0px 1px rgba(255, 255, 255, 0.12);
$ui-shadow-dark-dialog: 0px 32px 64px rgba(0, 0, 0, 0.37), 0px 2px 21px rgba(0, 0, 0, 0.37), inset 0px 0px 0px 1px rgba(255, 255, 255, 0.12);

$ui-window-shadow-inactive: 0px 16px 32px rgba(0, 0, 0, 0.1876), 0px 2px 10.67px rgba(0, 0, 0, 0.1474), inset 0px 0px 0px 1px rgba(32, 31, 30, 0.12);
$ui-window-shadow-active: 0px 32px 64px rgba(0, 0, 0, 0.28), 0px 2px 21px rgba(0, 0, 0, 0.22), inset 0px 0px 0px 1px rgba(32, 31, 30, 0.12);

$ui-window-shadow-dark-inactive: 0px 16px 32px rgba(0, 0, 0, 0.37), 0px 2px 10.67px rgba(0, 0, 0, 0.37), inset 0px 0px 0px 1px rgba(255, 255, 255, 0.12);
$ui-window-shadow-dark-active: 0px 32px 64px rgba(0, 0, 0, 0.56), 0px 2px 21px rgba(0, 0, 0, 0.55), inset 0px 0px 0px 1px rgba(255, 255, 255, 0.12);
/*endregion*/

/*sky props*/
$skyWhiteSoft: #FFF; //url('/assets/styles/white-soft.png');
$skyWhiteBright: #FFF; //url('/assets/styles/white-soft.png');
$skyDarkSoft: #333; //url('/assets/styles/white-soft.png');
$skyDarkBright: #333; //url('/assets/styles/white-soft.png');
$skyBlur60: blur(60px);
$skyBlur240: blur(240px);
/*end sky props*/

$themes: (
  light: (text-100: #201F1E,
    text-80: #605E5C,
    text-60: #A19F9D,
    stroke-opacity: rgba(32, 31, 30, 0.12),
    bg-left-bar: #FFFFFF,
    bg-body: #FFFFFF,
    bg-second: #F3F3F3,
    bg-hover: rgba(32, 31, 30, 0.04),
    surface-1: rgba(32, 31, 30, 0.08),
    surface-2: rgba(32, 31, 30, 0.16),
    left-nav-panel: #FFFFFF,
    no-active: rgba(255, 255, 255, 0.4),

    stroke-left: inset 1px 0px 0px rgba(32, 31, 30, 0.12),
    stroke-right: inset -1px 0px 0px rgba(32, 31, 30, 0.12),
    stroke-upper: inset 0px 1px 0px rgba(32, 31, 30, 0.12),
    stroke-lower: inset 0px -1px 0px rgba(32, 31, 30, 0.12),

    ui-shadow-message: $ui-shadow-message,
    ui-shadow-card-rest: $ui-shadow-card-rest,
    ui-shadow-panel: $ui-shadow-panel,
    ui-shadow-flyout: $ui-shadow-flyout,
    ui-shadow-dialog: $ui-shadow-dialog,

    ui-window-shadow-inactive: $ui-window-shadow-inactive,
    ui-window-shadow-active: $ui-window-shadow-active,
    clout-sky: $skyWhiteBright,
  ),
  dark: (text-100: #FFFFFF,
    text-80: #B9BBBE,
    text-60: #73767C,
    stroke-opacity: rgba(255, 255, 255, 0.12),
    bg-left-bar: #141414,
    bg-body: #1F1F1F,
    bg-second: #292929,
    bg-hover: rgba(250, 249, 248, 0.04),
    surface-1: rgba(255, 255, 255, 0.08),
    surface-2: rgba(255, 255, 255, 0.16),
    left-nav-panel: #0A0A0A,
    no-active: rgba(55, 57, 62, 0.4),

    stroke-left: inset 1px 0px 0px rgba(255, 255, 255, 0.12),
    stroke-right: inset -1px 0px 0px rgba(255, 255, 255, 0.12),
    stroke-upper: inset 0px 1px 0px rgba(255, 255, 255, 0.12),
    stroke-lower: inset 0px -1px 0px rgba(255, 255, 255, 0.12),

    ui-shadow-message: $ui-shadow-dark-message,
    ui-shadow-card-rest: $ui-shadow-dark-card-rest,
    ui-shadow-panel: $ui-shadow-dark-panel,
    ui-shadow-flyout: $ui-shadow-dark-flyout,
    ui-shadow-dialog: $ui-shadow-dark-dialog,

    ui-window-shadow-inactive: $ui-window-shadow-dark-inactive,
    ui-window-shadow-active: $ui-window-shadow-dark-active,
    clout-sky: $skyDarkBright,
  )
);

@mixin theme-aware($key, $color, $prop: '') {

  @each $theme-name,
  $theme-color in $themes {
    .theme-#{$theme-name} & {
      @if $prop {
        #{$key}: #{$prop} map-get(map-get($themes, $theme-name), $color)
      }

      @else {
        #{$key}: map-get(map-get($themes, $theme-name), $color)
      }
    }
  }
}

@mixin important-theme-aware($key, $color, $prop: '') {

  @each $theme-name,
  $theme-color in $themes {
    .theme-#{$theme-name} & {
      @if $prop {
        #{$key}: #{$prop} map-get(map-get($themes, $theme-name), $color) !important;
      }

      @else {
        #{$key}: map-get(map-get($themes, $theme-name), $color) !important;
      }
    }
  }
}

@mixin theme-under($theme-name, $key, $color) {
  .theme-#{$theme-name} & {
    #{$key}: map-get(map-get($themes, $theme-name), $color)
  }
}

@mixin theme-color($theme-name, $color) {
  .theme-#{$theme-name} & {
    #{$key}: map-get(map-get($themes, $theme-name), $color)
  }
}